#1 
text = 'кот и кот123 поймали кошку11 и собачку.'

matches = re.findall(r'\b[а-яА-Я]+\b', text)
print(matches)
#2
import re

def extract_dates(clients):
    dates = []
    for client in clients:
        match = re.search(r'Дата:\s*([А-ЯЁа-яё]+\s+\d{1,2},?\s+\d{4})', client)
        if match:
            dates.append(match.group(1))
    return dates

clients = ['Номер клиента: 111, Дата: Февраль 29 2012', 'Номер клиента: 112, Дата: Май 11, 2019', 'Номер клиента: 666, Дата: Май 6, 2016', 'Номер клиента: 42, Дата: Декабрь 24, 2020', 'Номер клиента: 100052, Дата: июль 23, 2021', 'Номер клиента: 564, Дата: Февраль 1, 2005', 'Номер клиента: 98, Дата: Август 11, 2015', 'Номер клиента: 187, Дата: Апрель 14, 2013', 'Номер клиента: 87, Дата: Октябрь 29, 1999', 'Номер клиента: 88, Дата: Ноябрь 24, 2015']

dates = extract_dates(clients)
print(dates)

#3

import nltk
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer
from collections import Counter
import matplotlib.pyplot as plt

#ресурсы
nltk.download('punkt')
nltk.download('wordnet')

def lemmatize_text(text):
    lemmatizer = WordNetLemmatizer()
    tokens = word_tokenize(text.lower()) 
    lemmatized_tokens = [lemmatizer.lemmatize(token) for token in tokens]
    return lemmatized_tokens

def plot_word_distribution(tokens, top_n=10):
    word_counter = Counter(tokens)
    most_common_words = word_counter.most_common(top_n)
    words, frequencies = zip(*most_common_words)

    plt.figure(figsize=(10, 6))
    plt.bar(words, frequencies, color='skyblue')
    plt.xlabel('Words')
    plt.ylabel('Frequency')
    plt.title('Top {} Most Common Words'.format(top_n))
    plt.xticks(rotation=45)
    plt.show()

text = '''Растения многолетние, клубнелуковичные. Клубнелуковица округлая, возобновляется ежегодно, одета плёнчатыми
чешуйками от белой до чёрно-вишнёвой окраски. Стебли прямые неветвящиеся, одиночные, облиственные,
50—150 см высотой. Листья тонкие, линейные или мечевидные, 50—80 см длиной, голубовато-зелёного цвета.
Влагалища листьев смыкаются вокруг стебля, придавая ему дополнительную прочность. Цветки собраны в одностороннее, 
двустороннее или спиральное колосовидное соцветие
до 80 см длиной, рыхлое, среднеплотное или плотное. Цветки сидячие с простым воронковидным околоцветником из шести
неодинаковых долей, сросшихся основаниями, различной величины и формы. Плод — трёхстворчатая коробочка. Семян много,
они круглые или овальные, коричневые. Размножают клубнелуковицами и клубнепочками (чаще их называют детками).
Используют в основном для срезки. Срезанные соцветия стоят в воде 10—12 суток. Единовременно в мире существует
около 5000 сортов гладиолусов. Старые сорта постепенно сходят со сцены (при вегетативном размножении накапливаются
дефекты копирования ДНК, а из-за этого жизнеспособность сорта постепенно снижается); считается, что средний
срок жизни сорта составляет порядка десяти лет. Однако есть и отдельные сорта-долгожители, успешно существующие
уже на протяжении трёх десятков лет. На смену старым сортам приходят новые, со всё более сложными и необычными окрасками,
сложной гофрировкой и улучшенными прочими признаками. Около 300 года до н. э. клубнелуковицы гладиолусов употребляли в пищу,
запекая их или используя в качестве основы для лепёшек, размалывая вместе с луком.
В I веке н. э. гладиолусы упоминаются Плинием в связи с их якобы магической силой уберегать воина от гибели
и приносить победу. Для достижения этой цели воину необходимо было повесить на шею клубнелуковицу гладиолуса
в качестве амулета. Диоскорид описал дикорастущие виды гладиолусов (Gladiolus segentum) в 50-е годы н. э. 
В Средние века муку из гладиолусов добавляли при выпекании хлеба.'''

lemmatized_text = lemmatize_text(text)
plot_word_distribution(lemmatized_text)
#4
import pymorphy2
import pandas as pd
from collections import Counter

#pymorphy2-берем,как морф.анализатор
morph_analyzer = pymorphy2.MorphAnalyzer()

#дублируем тескст(в питоне делала в раных файлах)
text = '''Растения многолетние, клубнелуковичные. Клубнелуковица округлая, возобновляется ежегодно, одета плёнчатыми
чешуйками от белой до чёрно-вишнёвой окраски. Стебли прямые неветвящиеся, одиночные, облиственные,
50—150 см высотой. Листья тонкие, линейные или мечевидные, 50—80 см длиной, голубовато-зелёного цвета.
Влагалища листьев смыкаются вокруг стебля, придавая ему дополнительную прочность. Цветки собраны в одностороннее, 
двустороннее или спиральное колосовидное соцветие
до 80 см длиной, рыхлое, среднеплотное или плотное. Цветки сидячие с простым воронковидным околоцветником из шести
неодинаковых долей, сросшихся основаниями, различной величины и формы. Плод — трёхстворчатая коробочка. Семян много,
они круглые или овальные, коричневые. Размножают клубнелуковицами и клубнепочками (чаще их называют детками).
Используют в основном для срезки. Срезанные соцветия стоят в воде 10—12 суток. Единовременно в мире существует
около 5000 сортов гладиолусов. Старые сорта постепенно сходят со сцены (при вегетативном размножении накапливаются
дефекты копирования ДНК, а из-за этого жизнеспособность сорта постепенно снижается); считается, что средний
срок жизни сорта составляет порядка десяти лет. Однако есть и отдельные сорта-долгожители, успешно существующие
уже на протяжении трёх десятков лет. На смену старым сортам приходят новые, со всё более сложными и необычными окрасками,
сложной гофрировкой и улучшенными прочими признаками. Около 300 года до н. э. клубнелуковицы гладиолусов употребляли в пищу,
запекая их или используя в качестве основы для лепёшек, размалывая вместе с луком.
В I веке н. э. гладиолусы упоминаются Плинием в связи с их якобы магической силой уберегать воина от гибели
и приносить победу. Для достижения этой цели воину необходимо было повесить на шею клубнелуковицу гладиолуса
в качестве амулета. Диоскорид описал дикорастущие виды гладиолусов (Gladiolus segentum) в 50-е годы н. э. 
В Средние века муку из гладиолусов добавляли при выпекании хлеба.'''

#список слов
tagged_words = [(word, morph_analyzer.parse(word)[0].tag.POS) for word in text.split()]

#подсчет частей речи
pos_counter = Counter([pos for _, pos in tagged_words])

#подсчет наречий, предлогов, числительных, знаков пунктуации и подчинительных союзов
adverbs_count = pos_counter.get('ADVB', 0)
prepositions_count = pos_counter.get('PREP', 0)
numerals_count = pos_counter.get('NUMR', 0)
punctuation_count = pos_counter.get('PNCT', 0)
subordinate_conjunctions_count = pos_counter.get('CONJ', 0)

#общее кол-во
total_words = len(tagged_words)

adverbs_ratio = adverbs_count / total_words
prepositions_ratio = prepositions_count / total_words
numerals_ratio = numerals_count / total_words
punctuation_ratio = punctuation_count / total_words
subordinate_conjunctions_ratio = subordinate_conjunctions_count / total_words

#DataFrame с результатами
data = {
    'Часть речи': ['Наречия', 'Предлоги', 'Числительные', 'Знаки пунктуации', 'Подчинительные союзы'],
    'Количество': [adverbs_count, prepositions_count, numerals_count, punctuation_count, subordinate_conjunctions_count],
    'Доля': [adverbs_ratio, prepositions_ratio, numerals_ratio, punctuation_ratio, subordinate_conjunctions_ratio]
}

df = pd.DataFrame(data)

print(df)
#5
import spacy

nlp = spacy.load("ru_core_news_sm")

text = '''Растения многолетние, клубнелуковичные. Клубнелуковица округлая, возобновляется ежегодно, одета плёнчатыми
чешуйками от белой до чёрно-вишнёвой окраски. Стебли прямые неветвящиеся, одиночные, облиственные,
50—150 см высотой. Листья тонкие, линейные или мечевидные, 50—80 см длиной, голубовато-зелёного цвета.
Влагалища листьев смыкаются вокруг стебля, придавая ему дополнительную прочность. Цветки собраны в одностороннее, 
двустороннее или спиральное колосовидное соцветие
до 80 см длиной, рыхлое, среднеплотное или плотное. Цветки сидячие с простым воронковидным околоцветником из шести
неодинаковых долей, сросшихся основаниями, различной величины и формы. Плод — трёхстворчатая коробочка. Семян много,
они круглые или овальные, коричневые. Размножают клубнелуковицами и клубнепочками (чаще их называют детками).
Используют в основном для срезки. Срезанные соцветия стоят в воде 10—12 суток. Единовременно в мире существует
около 5000 сортов гладиолусов. Старые сорта постепенно сходят со сцены (при вегетативном размножении накапливаются
дефекты копирования ДНК, а из-за этого жизнеспособность сорта постепенно снижается); считается, что средний
срок жизни сорта составляет порядка десяти лет. Однако есть и отдельные сорта-долгожители, успешно существующие
уже на протяжении трёх десятков лет. На смену старым сортам приходят новые, со всё более сложными и необычными окрасками,
сложной гофрировкой и улучшенными прочими признаками. Около 300 года до н. э. клубнелуковицы гладиолусов употребляли в пищу,
запекая их или используя в качестве основы для лепёшек, размалывая вместе с луком.
В I веке н. э. гладиолусы упоминаются Плинием в связи с их якобы магической силой уберегать воина от гибели
и приносить победу. Для достижения этой цели воину необходимо было повесить на шею клубнелуковицу гладиолуса
в качестве амулета. Диоскорид описал дикорастущие виды гладиолусов (Gladiolus segentum) в 50-е годы н. э. 
В Средние века муку из гладиолусов добавляли при выпекании хлеба.'''

doc = nlp(text)

tokens_with_children_count = [(token.text, len(list(token.children))) for token in doc]

tokens_with_children_count.sort(key=lambda x: x[1], reverse=True)

top_10_tokens_with_children = tokens_with_children_count[:10]
for token, children_count in top_10_tokens_with_children:
    print(f"Токен: {token}, Количество дочерних токенов: {children_count}")
#6
import nltk
from nltk.collocations import BigramCollocationFinder
from nltk.metrics import BigramAssocMeasures
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import string

nltk.download('stopwords')
stop_words = set(stopwords.words('russian'))


with open('/content/PDOprax2.txt', 'r', encoding='utf-8') as file:
    text = file.read()

#обработка текста
tokens = [word.lower() for word in word_tokenize(text) if word.isalnum() and word.lower() not in stop_words]

#BigramCollocationFinder-штука для поиска коллакаций
finder = BigramCollocationFinder.from_words(tokens)

#Вычисление PMI
pmi_scores = finder.score_ngrams(BigramAssocMeasures.pmi)

pmi_threshold = 5

significant_collocations = [(bigram, pmi) for bigram, pmi in pmi_scores if pmi >= pmi_threshold]
for collocation, pmi in significant_collocations:
    print(collocation, pmi)

